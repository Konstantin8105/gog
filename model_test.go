package gog

import (
	"fmt"
	"os"
)

func ExampleModel() {
	var m Model
	m.AddCircle(0, 0, 1, 1)
	m.AddLine(Point{-1, 0}, Point{1, 0}, 2)
	m.AddLine(Point{0, -1}, Point{0, 1}, 3)
	fmt.Fprintf(os.Stdout, "Only structural lines:\n%s", m)
	m.Split(0.2)
	m.RemoveEmptyPoints()
	m.ConvexHullTriangles()
	m.Intersection()
	m.RemoveEmptyPoints()
	fmt.Fprintf(os.Stdout, "After intersection:\n%s", m)
	fmt.Fprintf(os.Stdout, "Minimal distance between points:\n%.4f", m.MinPointDistance())
	// Output:
	// Only structural lines:
	// Points:
	// 000	{+0.0000 -1.0000}
	// 001	{+1.0000 +0.0000}
	// 002	{+0.0000 +1.0000}
	// 003	{-1.0000 +0.0000}
	// Lines:
	// 000	[  1   3   2]
	// 001	[  0   2   3]
	// Arcs:
	// 000	[  0   1   2   1]
	// 001	[  0   3   2   1]
	// After intersection:
	// Points:
	// 000	{+0.0000 -1.0000}
	// 001	{+1.0000 +0.0000}
	// 002	{+0.0000 +1.0000}
	// 003	{-1.0000 +0.0000}
	// 004	{+0.8182 +0.0000}
	// 005	{+0.6364 +0.0000}
	// 006	{+0.4545 +0.0000}
	// 007	{+0.2727 +0.0000}
	// 008	{+0.0909 +0.0000}
	// 009	{-0.0909 +0.0000}
	// 010	{-0.2727 +0.0000}
	// 011	{-0.4545 +0.0000}
	// 012	{-0.6364 +0.0000}
	// 013	{-0.8182 +0.0000}
	// 014	{+0.0000 -0.8182}
	// 015	{+0.0000 -0.6364}
	// 016	{+0.0000 -0.4545}
	// 017	{+0.0000 -0.2727}
	// 018	{+0.0000 -0.0909}
	// 019	{+0.0000 +0.0909}
	// 020	{+0.0000 +0.2727}
	// 021	{+0.0000 +0.4545}
	// 022	{+0.0000 +0.6364}
	// 023	{+0.0000 +0.8182}
	// 024	{-0.0491 +0.9988}
	// 025	{-0.0980 +0.9952}
	// 026	{-0.1467 +0.9892}
	// 027	{-0.1951 +0.9808}
	// 028	{-0.2430 +0.9700}
	// 029	{-0.2903 +0.9569}
	// 030	{-0.3369 +0.9415}
	// 031	{-0.3827 +0.9239}
	// 032	{-0.4276 +0.9040}
	// 033	{-0.4714 +0.8819}
	// 034	{-0.5141 +0.8577}
	// 035	{-0.5556 +0.8315}
	// 036	{-0.5957 +0.8032}
	// 037	{-0.6344 +0.7730}
	// 038	{-0.6716 +0.7410}
	// 039	{-0.7071 +0.7071}
	// 040	{-0.7410 +0.6716}
	// 041	{-0.7730 +0.6344}
	// 042	{-0.8032 +0.5957}
	// 043	{-0.8315 +0.5556}
	// 044	{-0.8577 +0.5141}
	// 045	{-0.8819 +0.4714}
	// 046	{-0.9040 +0.4276}
	// 047	{-0.9239 +0.3827}
	// 048	{-0.9415 +0.3369}
	// 049	{-0.9569 +0.2903}
	// 050	{-0.9700 +0.2430}
	// 051	{-0.9808 +0.1951}
	// 052	{-0.9892 +0.1467}
	// 053	{-0.9952 +0.0980}
	// 054	{-0.9988 +0.0491}
	// 055	{-0.9988 -0.0491}
	// 056	{-0.9952 -0.0980}
	// 057	{-0.9892 -0.1467}
	// 058	{-0.9808 -0.1951}
	// 059	{-0.9700 -0.2430}
	// 060	{-0.9569 -0.2903}
	// 061	{-0.9415 -0.3369}
	// 062	{-0.9239 -0.3827}
	// 063	{-0.9040 -0.4276}
	// 064	{-0.8819 -0.4714}
	// 065	{-0.8577 -0.5141}
	// 066	{-0.8315 -0.5556}
	// 067	{-0.8032 -0.5957}
	// 068	{-0.7730 -0.6344}
	// 069	{-0.7410 -0.6716}
	// 070	{-0.7071 -0.7071}
	// 071	{-0.6716 -0.7410}
	// 072	{-0.6344 -0.7730}
	// 073	{-0.5957 -0.8032}
	// 074	{-0.5556 -0.8315}
	// 075	{-0.5141 -0.8577}
	// 076	{-0.4714 -0.8819}
	// 077	{-0.4276 -0.9040}
	// 078	{-0.3827 -0.9239}
	// 079	{-0.3369 -0.9415}
	// 080	{-0.2903 -0.9569}
	// 081	{-0.2430 -0.9700}
	// 082	{-0.1951 -0.9808}
	// 083	{-0.1467 -0.9892}
	// 084	{-0.0980 -0.9952}
	// 085	{-0.0491 -0.9988}
	// 086	{+0.0000 +0.0000}
	// Lines:
	// 000	[  1   4   2]
	// 001	[  4   5   2]
	// 002	[  5   6   2]
	// 003	[  6   7   2]
	// 004	[  7   8   2]
	// 005	[  9  10   2]
	// 006	[ 10  11   2]
	// 007	[ 11  12   2]
	// 008	[ 12  13   2]
	// 009	[  3  13   2]
	// 010	[  0  14   3]
	// 011	[ 14  15   3]
	// 012	[ 15  16   3]
	// 013	[ 16  17   3]
	// 014	[ 17  18   3]
	// 015	[ 19  20   3]
	// 016	[ 20  21   3]
	// 017	[ 21  22   3]
	// 018	[ 22  23   3]
	// 019	[  2  23   3]
	// 020	[ 18  86   3]
	// 021	[ 19  86   3]
	// 022	[  8  86   2]
	// 023	[  9  86   2]
	// Arcs:
	// 000	[  2  24  25   1]
	// 001	[ 25  26  27   1]
	// 002	[ 27  28  29   1]
	// 003	[ 29  30  31   1]
	// 004	[ 31  32  33   1]
	// 005	[ 33  34  35   1]
	// 006	[ 35  36  37   1]
	// 007	[ 37  38  39   1]
	// 008	[ 39  40  41   1]
	// 009	[ 41  42  43   1]
	// 010	[ 43  44  45   1]
	// 011	[ 45  46  47   1]
	// 012	[ 47  48  49   1]
	// 013	[ 49  50  51   1]
	// 014	[ 51  52  53   1]
	// 015	[  3  54  53   1]
	// 016	[  3  55  56   1]
	// 017	[ 56  57  58   1]
	// 018	[ 58  59  60   1]
	// 019	[ 60  61  62   1]
	// 020	[ 62  63  64   1]
	// 021	[ 64  65  66   1]
	// 022	[ 66  67  68   1]
	// 023	[ 68  69  70   1]
	// 024	[ 70  71  72   1]
	// 025	[ 72  73  74   1]
	// 026	[ 74  75  76   1]
	// 027	[ 76  77  78   1]
	// 028	[ 78  79  80   1]
	// 029	[ 80  81  82   1]
	// 030	[ 82  83  84   1]
	// 031	[  0  85  84   1]
	// Triangles:
	// 000	[  0   1   2  -1]
	// 001	[  1   2  24  -1]
	// 002	[  2  24  25  -1]
	// 003	[ 24  25  26  -1]
	// 004	[ 25  26  27  -1]
	// 005	[ 26  27  28  -1]
	// 006	[ 27  28  29  -1]
	// 007	[ 28  29  30  -1]
	// 008	[ 29  30  31  -1]
	// 009	[ 30  31  32  -1]
	// 010	[ 31  32  33  -1]
	// 011	[ 32  33  34  -1]
	// 012	[ 33  34  35  -1]
	// 013	[ 34  35  36  -1]
	// 014	[ 35  36  37  -1]
	// 015	[ 36  37  38  -1]
	// 016	[ 37  38  39  -1]
	// 017	[ 38  39  40  -1]
	// 018	[ 39  40  41  -1]
	// 019	[ 40  41  42  -1]
	// 020	[ 41  42  43  -1]
	// 021	[ 42  43  44  -1]
	// 022	[ 43  44  45  -1]
	// 023	[ 44  45  46  -1]
	// 024	[ 45  46  47  -1]
	// 025	[ 46  47  48  -1]
	// 026	[ 47  48  49  -1]
	// 027	[ 48  49  50  -1]
	// 028	[ 49  50  51  -1]
	// 029	[ 50  51  52  -1]
	// 030	[ 51  52  53  -1]
	// 031	[ 52  53  54  -1]
	// 032	[  3  54  53  -1]
	// 033	[ 54   3  55  -1]
	// 034	[  3  55  56  -1]
	// 035	[ 55  56  57  -1]
	// 036	[ 56  57  58  -1]
	// 037	[ 57  58  59  -1]
	// 038	[ 58  59  60  -1]
	// 039	[ 59  60  61  -1]
	// 040	[ 60  61  62  -1]
	// 041	[ 61  62  63  -1]
	// 042	[ 62  63  64  -1]
	// 043	[ 63  64  65  -1]
	// 044	[ 64  65  66  -1]
	// 045	[ 65  66  67  -1]
	// 046	[ 66  67  68  -1]
	// 047	[ 67  68  69  -1]
	// 048	[ 68  69  70  -1]
	// 049	[ 69  70  71  -1]
	// 050	[ 70  71  72  -1]
	// 051	[ 71  72  73  -1]
	// 052	[ 72  73  74  -1]
	// 053	[ 73  74  75  -1]
	// 054	[ 74  75  76  -1]
	// 055	[ 75  76  77  -1]
	// 056	[ 76  77  78  -1]
	// 057	[ 77  78  79  -1]
	// 058	[ 78  79  80  -1]
	// 059	[ 79  80  81  -1]
	// 060	[ 80  81  82  -1]
	// 061	[ 81  82  83  -1]
	// 062	[ 82  83  84  -1]
	// 063	[ 83  84  85  -1]
	// Minimal distance between points:
	// 0.0491
}
